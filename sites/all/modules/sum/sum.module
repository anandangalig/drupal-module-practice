<?php

  function sum_menu() {
    $items['sum'] = array(
      'title' => 'Calculate Sum', //shows up on menu panel
      'page callback' => 'drupal_get_form', //special drupal function for FORMS
      'page arguments' => array('sum_bob'), //the ACTUAL callback function that runs ( passed in as argument via drupal_get_form)
      'access callback' => TRUE,
      'type' => MENU_NORMAL_ITEM, //creates the entry on the menu panel
    );
    $items['sum_success_page'] = array(
      'title' => 'Success',
      'page callback' => 'sum_success',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK, //page is hidden from the menu panel
    );
    return $items;
  }

  function sum_bob() {
    $form['left_number'] = array( //left_number becomes the name='' in html
      '#title' => 'Left Number',
      '#type' => 'textfield',
      '#description' => t('Please enter the first number'), //t() Translates strings to given language
      '#element_validate' => array('element_validate_number', 'element_validate_range', 'element_validate_even'), // gets evaluated in order of listing, e.i. only the prior errors are caught and displayed!
      '#required' => TRUE,
    );

    $form['right_number'] = array(
      '#title' => 'Right Number',
      '#type' => 'textfield',
      '#description' => t('Please enter the second number to add'),
      '#element_validate' => array('element_validate_number', 'element_validate_range', 'element_validate_even'),
      '#required' => TRUE,
    );

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Calculate Sum', //prints on the button
    );
    return $form;
  }

  function element_validate_range($element) { //custom element validation for -50<xyz>50, then called in the form array
    if ($element['#value'] > 50 || $element['#value'] < -50) {
        form_error($element, t('Number must be less than 50 or greater than -50.'));  //form_error fails the validation and the page reloads; First argument is the form field element which caused the error. The second argument is the message to display.
    }
  }

  function element_validate_even($element) { //custom element validation for even numbers, then called in the form array
    if ($element['#value'] % 2 != 0) { //modulus = remainder after x/y
        form_error($element, t('Number must be even.'));
    }
  }


  function sum_bob_submit($form, &$form_state) { //form_state array holds user input data + id's for the html to render.
    $first_number = $form_state['values']['left_number'];
    $second_number = $form_state['values']['right_number'];
    $sum = $first_number + $second_number;
    $_SESSION ['sum_output'] = $sum; //special variable of PHP (storing it in cookies)
    $form_state['redirect'] = 'sum_success_page'; // similar to $_GET['destination']= 'sum_success_page'
  }

  function sum_success() {
    $answer = $_SESSION['sum_output'];
    return 'You calculated a sum! The answer is:' . " " . $answer;
  }
